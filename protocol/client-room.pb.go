// Code generated by protoc-gen-go. DO NOT EDIT.
// source: client-room.proto

package protocol

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreateRoomReq struct {
	Header               *ReqHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CreateRoomReq) Reset()         { *m = CreateRoomReq{} }
func (m *CreateRoomReq) String() string { return proto.CompactTextString(m) }
func (*CreateRoomReq) ProtoMessage()    {}
func (*CreateRoomReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_1919f8b7a1b88bf0, []int{0}
}

func (m *CreateRoomReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRoomReq.Unmarshal(m, b)
}
func (m *CreateRoomReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRoomReq.Marshal(b, m, deterministic)
}
func (m *CreateRoomReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRoomReq.Merge(m, src)
}
func (m *CreateRoomReq) XXX_Size() int {
	return xxx_messageInfo_CreateRoomReq.Size(m)
}
func (m *CreateRoomReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRoomReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRoomReq proto.InternalMessageInfo

func (m *CreateRoomReq) GetHeader() *ReqHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type CreateRoomAck struct {
	Header               *AckHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CreateRoomAck) Reset()         { *m = CreateRoomAck{} }
func (m *CreateRoomAck) String() string { return proto.CompactTextString(m) }
func (*CreateRoomAck) ProtoMessage()    {}
func (*CreateRoomAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_1919f8b7a1b88bf0, []int{1}
}

func (m *CreateRoomAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRoomAck.Unmarshal(m, b)
}
func (m *CreateRoomAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRoomAck.Marshal(b, m, deterministic)
}
func (m *CreateRoomAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRoomAck.Merge(m, src)
}
func (m *CreateRoomAck) XXX_Size() int {
	return xxx_messageInfo_CreateRoomAck.Size(m)
}
func (m *CreateRoomAck) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRoomAck.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRoomAck proto.InternalMessageInfo

func (m *CreateRoomAck) GetHeader() *AckHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type JoinRoomReq struct {
	Header               *ReqHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *JoinRoomReq) Reset()         { *m = JoinRoomReq{} }
func (m *JoinRoomReq) String() string { return proto.CompactTextString(m) }
func (*JoinRoomReq) ProtoMessage()    {}
func (*JoinRoomReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_1919f8b7a1b88bf0, []int{2}
}

func (m *JoinRoomReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinRoomReq.Unmarshal(m, b)
}
func (m *JoinRoomReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinRoomReq.Marshal(b, m, deterministic)
}
func (m *JoinRoomReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinRoomReq.Merge(m, src)
}
func (m *JoinRoomReq) XXX_Size() int {
	return xxx_messageInfo_JoinRoomReq.Size(m)
}
func (m *JoinRoomReq) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinRoomReq.DiscardUnknown(m)
}

var xxx_messageInfo_JoinRoomReq proto.InternalMessageInfo

func (m *JoinRoomReq) GetHeader() *ReqHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type JoinRoomAck struct {
	Header               *AckHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *JoinRoomAck) Reset()         { *m = JoinRoomAck{} }
func (m *JoinRoomAck) String() string { return proto.CompactTextString(m) }
func (*JoinRoomAck) ProtoMessage()    {}
func (*JoinRoomAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_1919f8b7a1b88bf0, []int{3}
}

func (m *JoinRoomAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinRoomAck.Unmarshal(m, b)
}
func (m *JoinRoomAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinRoomAck.Marshal(b, m, deterministic)
}
func (m *JoinRoomAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinRoomAck.Merge(m, src)
}
func (m *JoinRoomAck) XXX_Size() int {
	return xxx_messageInfo_JoinRoomAck.Size(m)
}
func (m *JoinRoomAck) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinRoomAck.DiscardUnknown(m)
}

var xxx_messageInfo_JoinRoomAck proto.InternalMessageInfo

func (m *JoinRoomAck) GetHeader() *AckHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type ExitRoomReq struct {
	Header               *ReqHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ExitRoomReq) Reset()         { *m = ExitRoomReq{} }
func (m *ExitRoomReq) String() string { return proto.CompactTextString(m) }
func (*ExitRoomReq) ProtoMessage()    {}
func (*ExitRoomReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_1919f8b7a1b88bf0, []int{4}
}

func (m *ExitRoomReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExitRoomReq.Unmarshal(m, b)
}
func (m *ExitRoomReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExitRoomReq.Marshal(b, m, deterministic)
}
func (m *ExitRoomReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExitRoomReq.Merge(m, src)
}
func (m *ExitRoomReq) XXX_Size() int {
	return xxx_messageInfo_ExitRoomReq.Size(m)
}
func (m *ExitRoomReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ExitRoomReq.DiscardUnknown(m)
}

var xxx_messageInfo_ExitRoomReq proto.InternalMessageInfo

func (m *ExitRoomReq) GetHeader() *ReqHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type ExitRoomAck struct {
	Header               *AckHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ExitRoomAck) Reset()         { *m = ExitRoomAck{} }
func (m *ExitRoomAck) String() string { return proto.CompactTextString(m) }
func (*ExitRoomAck) ProtoMessage()    {}
func (*ExitRoomAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_1919f8b7a1b88bf0, []int{5}
}

func (m *ExitRoomAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExitRoomAck.Unmarshal(m, b)
}
func (m *ExitRoomAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExitRoomAck.Marshal(b, m, deterministic)
}
func (m *ExitRoomAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExitRoomAck.Merge(m, src)
}
func (m *ExitRoomAck) XXX_Size() int {
	return xxx_messageInfo_ExitRoomAck.Size(m)
}
func (m *ExitRoomAck) XXX_DiscardUnknown() {
	xxx_messageInfo_ExitRoomAck.DiscardUnknown(m)
}

var xxx_messageInfo_ExitRoomAck proto.InternalMessageInfo

func (m *ExitRoomAck) GetHeader() *AckHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type DiscardRoomReq struct {
	Header               *ReqHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *DiscardRoomReq) Reset()         { *m = DiscardRoomReq{} }
func (m *DiscardRoomReq) String() string { return proto.CompactTextString(m) }
func (*DiscardRoomReq) ProtoMessage()    {}
func (*DiscardRoomReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_1919f8b7a1b88bf0, []int{6}
}

func (m *DiscardRoomReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiscardRoomReq.Unmarshal(m, b)
}
func (m *DiscardRoomReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiscardRoomReq.Marshal(b, m, deterministic)
}
func (m *DiscardRoomReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscardRoomReq.Merge(m, src)
}
func (m *DiscardRoomReq) XXX_Size() int {
	return xxx_messageInfo_DiscardRoomReq.Size(m)
}
func (m *DiscardRoomReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscardRoomReq.DiscardUnknown(m)
}

var xxx_messageInfo_DiscardRoomReq proto.InternalMessageInfo

func (m *DiscardRoomReq) GetHeader() *ReqHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type DiscardRoomAck struct {
	Header               *AckHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *DiscardRoomAck) Reset()         { *m = DiscardRoomAck{} }
func (m *DiscardRoomAck) String() string { return proto.CompactTextString(m) }
func (*DiscardRoomAck) ProtoMessage()    {}
func (*DiscardRoomAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_1919f8b7a1b88bf0, []int{7}
}

func (m *DiscardRoomAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiscardRoomAck.Unmarshal(m, b)
}
func (m *DiscardRoomAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiscardRoomAck.Marshal(b, m, deterministic)
}
func (m *DiscardRoomAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscardRoomAck.Merge(m, src)
}
func (m *DiscardRoomAck) XXX_Size() int {
	return xxx_messageInfo_DiscardRoomAck.Size(m)
}
func (m *DiscardRoomAck) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscardRoomAck.DiscardUnknown(m)
}

var xxx_messageInfo_DiscardRoomAck proto.InternalMessageInfo

func (m *DiscardRoomAck) GetHeader() *AckHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateRoomReq)(nil), "protocol.CreateRoomReq")
	proto.RegisterType((*CreateRoomAck)(nil), "protocol.CreateRoomAck")
	proto.RegisterType((*JoinRoomReq)(nil), "protocol.JoinRoomReq")
	proto.RegisterType((*JoinRoomAck)(nil), "protocol.JoinRoomAck")
	proto.RegisterType((*ExitRoomReq)(nil), "protocol.ExitRoomReq")
	proto.RegisterType((*ExitRoomAck)(nil), "protocol.ExitRoomAck")
	proto.RegisterType((*DiscardRoomReq)(nil), "protocol.DiscardRoomReq")
	proto.RegisterType((*DiscardRoomAck)(nil), "protocol.DiscardRoomAck")
}

func init() { proto.RegisterFile("client-room.proto", fileDescriptor_1919f8b7a1b88bf0) }

var fileDescriptor_1919f8b7a1b88bf0 = []byte{
	// 246 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4c, 0xce, 0xc9, 0x4c,
	0xcd, 0x2b, 0xd1, 0x2d, 0xca, 0xcf, 0xcf, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x00,
	0x53, 0xc9, 0xf9, 0x39, 0x52, 0x3c, 0x19, 0xa9, 0x89, 0x29, 0xa9, 0x45, 0x10, 0x71, 0x25, 0x1b,
	0x2e, 0x5e, 0xe7, 0xa2, 0xd4, 0xc4, 0x92, 0xd4, 0xa0, 0xfc, 0xfc, 0xdc, 0xa0, 0xd4, 0x42, 0x21,
	0x6d, 0x2e, 0x36, 0x88, 0x02, 0x09, 0x46, 0x05, 0x46, 0x0d, 0x6e, 0x23, 0x61, 0x3d, 0x98, 0x4e,
	0xbd, 0xa0, 0xd4, 0x42, 0x0f, 0xb0, 0x54, 0x10, 0x54, 0x09, 0xaa, 0x6e, 0xc7, 0xe4, 0x6c, 0x7c,
	0xba, 0x1d, 0x93, 0xb3, 0xd1, 0x74, 0x5b, 0x71, 0x71, 0x7b, 0xe5, 0x67, 0xe6, 0x91, 0x65, 0x33,
	0x92, 0x5e, 0x72, 0xec, 0x75, 0xad, 0xc8, 0x2c, 0x21, 0xd7, 0x5e, 0x98, 0x5e, 0x92, 0xed, 0xb5,
	0xe5, 0xe2, 0x73, 0xc9, 0x2c, 0x4e, 0x4e, 0x2c, 0x4a, 0x21, 0xcb, 0x6a, 0x54, 0xed, 0xa4, 0xda,
	0x6e, 0xd4, 0xc3, 0xc4, 0xc5, 0x0d, 0xd2, 0x18, 0x9c, 0x5a, 0x54, 0x96, 0x99, 0x9c, 0x2a, 0xe4,
	0xc0, 0xc5, 0x85, 0x88, 0x3b, 0x21, 0x71, 0x84, 0x56, 0x94, 0xf4, 0x20, 0x85, 0x55, 0xc2, 0x31,
	0x39, 0x5b, 0x89, 0x41, 0xc8, 0x8a, 0x8b, 0x03, 0x16, 0x07, 0x42, 0xa2, 0x08, 0x65, 0x48, 0x71,
	0x2a, 0x85, 0x45, 0x18, 0xae, 0x17, 0x16, 0x8e, 0xc8, 0x7a, 0x91, 0xe2, 0x45, 0x0a, 0x8b, 0x30,
	0x44, 0xaf, 0x33, 0x17, 0x37, 0x52, 0x40, 0x08, 0x49, 0x20, 0xd4, 0xa1, 0x06, 0xaf, 0x14, 0x76,
	0x19, 0xb0, 0x21, 0x49, 0x6c, 0x60, 0x29, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc7, 0x37,
	0x00, 0x75, 0x2c, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RoomServiceClient is the client API for RoomService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RoomServiceClient interface {
	CreateRoom(ctx context.Context, in *CreateRoomReq, opts ...grpc.CallOption) (*CreateRoomAck, error)
	JoinRoom(ctx context.Context, in *JoinRoomReq, opts ...grpc.CallOption) (*JoinRoomAck, error)
	ExitRoom(ctx context.Context, in *ExitRoomReq, opts ...grpc.CallOption) (*ExitRoomAck, error)
	DiscardRoom(ctx context.Context, in *DiscardRoomReq, opts ...grpc.CallOption) (*DiscardRoomAck, error)
}

type roomServiceClient struct {
	cc *grpc.ClientConn
}

func NewRoomServiceClient(cc *grpc.ClientConn) RoomServiceClient {
	return &roomServiceClient{cc}
}

func (c *roomServiceClient) CreateRoom(ctx context.Context, in *CreateRoomReq, opts ...grpc.CallOption) (*CreateRoomAck, error) {
	out := new(CreateRoomAck)
	err := c.cc.Invoke(ctx, "/protocol.RoomService/CreateRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomServiceClient) JoinRoom(ctx context.Context, in *JoinRoomReq, opts ...grpc.CallOption) (*JoinRoomAck, error) {
	out := new(JoinRoomAck)
	err := c.cc.Invoke(ctx, "/protocol.RoomService/JoinRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomServiceClient) ExitRoom(ctx context.Context, in *ExitRoomReq, opts ...grpc.CallOption) (*ExitRoomAck, error) {
	out := new(ExitRoomAck)
	err := c.cc.Invoke(ctx, "/protocol.RoomService/ExitRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomServiceClient) DiscardRoom(ctx context.Context, in *DiscardRoomReq, opts ...grpc.CallOption) (*DiscardRoomAck, error) {
	out := new(DiscardRoomAck)
	err := c.cc.Invoke(ctx, "/protocol.RoomService/DiscardRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RoomServiceServer is the server API for RoomService service.
type RoomServiceServer interface {
	CreateRoom(context.Context, *CreateRoomReq) (*CreateRoomAck, error)
	JoinRoom(context.Context, *JoinRoomReq) (*JoinRoomAck, error)
	ExitRoom(context.Context, *ExitRoomReq) (*ExitRoomAck, error)
	DiscardRoom(context.Context, *DiscardRoomReq) (*DiscardRoomAck, error)
}

// UnimplementedRoomServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRoomServiceServer struct {
}

func (*UnimplementedRoomServiceServer) CreateRoom(ctx context.Context, req *CreateRoomReq) (*CreateRoomAck, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRoom not implemented")
}
func (*UnimplementedRoomServiceServer) JoinRoom(ctx context.Context, req *JoinRoomReq) (*JoinRoomAck, error) {
	return nil, status.Errorf(codes.Unimplemented, "method JoinRoom not implemented")
}
func (*UnimplementedRoomServiceServer) ExitRoom(ctx context.Context, req *ExitRoomReq) (*ExitRoomAck, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExitRoom not implemented")
}
func (*UnimplementedRoomServiceServer) DiscardRoom(ctx context.Context, req *DiscardRoomReq) (*DiscardRoomAck, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DiscardRoom not implemented")
}

func RegisterRoomServiceServer(s *grpc.Server, srv RoomServiceServer) {
	s.RegisterService(&_RoomService_serviceDesc, srv)
}

func _RoomService_CreateRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRoomReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServiceServer).CreateRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.RoomService/CreateRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServiceServer).CreateRoom(ctx, req.(*CreateRoomReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomService_JoinRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JoinRoomReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServiceServer).JoinRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.RoomService/JoinRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServiceServer).JoinRoom(ctx, req.(*JoinRoomReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomService_ExitRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExitRoomReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServiceServer).ExitRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.RoomService/ExitRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServiceServer).ExitRoom(ctx, req.(*ExitRoomReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomService_DiscardRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DiscardRoomReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServiceServer).DiscardRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.RoomService/DiscardRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServiceServer).DiscardRoom(ctx, req.(*DiscardRoomReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _RoomService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protocol.RoomService",
	HandlerType: (*RoomServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateRoom",
			Handler:    _RoomService_CreateRoom_Handler,
		},
		{
			MethodName: "JoinRoom",
			Handler:    _RoomService_JoinRoom_Handler,
		},
		{
			MethodName: "ExitRoom",
			Handler:    _RoomService_ExitRoom_Handler,
		},
		{
			MethodName: "DiscardRoom",
			Handler:    _RoomService_DiscardRoom_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "client-room.proto",
}
