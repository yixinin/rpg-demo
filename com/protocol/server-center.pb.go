// Code generated by protoc-gen-go. DO NOT EDIT.
// source: server-center.proto

package protocol

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EnterGameRep struct {
	Uid                  int64    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	RoomId               int64    `protobuf:"varint,2,opt,name=roomId,proto3" json:"roomId,omitempty"`
	GameId               int64    `protobuf:"varint,3,opt,name=gameId,proto3" json:"gameId,omitempty"`
	GameIp               string   `protobuf:"bytes,4,opt,name=gameIp,proto3" json:"gameIp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnterGameRep) Reset()         { *m = EnterGameRep{} }
func (m *EnterGameRep) String() string { return proto.CompactTextString(m) }
func (*EnterGameRep) ProtoMessage()    {}
func (*EnterGameRep) Descriptor() ([]byte, []int) {
	return fileDescriptor_c4fa9163c26a35ec, []int{0}
}

func (m *EnterGameRep) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnterGameRep.Unmarshal(m, b)
}
func (m *EnterGameRep) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnterGameRep.Marshal(b, m, deterministic)
}
func (m *EnterGameRep) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnterGameRep.Merge(m, src)
}
func (m *EnterGameRep) XXX_Size() int {
	return xxx_messageInfo_EnterGameRep.Size(m)
}
func (m *EnterGameRep) XXX_DiscardUnknown() {
	xxx_messageInfo_EnterGameRep.DiscardUnknown(m)
}

var xxx_messageInfo_EnterGameRep proto.InternalMessageInfo

func (m *EnterGameRep) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *EnterGameRep) GetRoomId() int64 {
	if m != nil {
		return m.RoomId
	}
	return 0
}

func (m *EnterGameRep) GetGameId() int64 {
	if m != nil {
		return m.GameId
	}
	return 0
}

func (m *EnterGameRep) GetGameIp() string {
	if m != nil {
		return m.GameIp
	}
	return ""
}

type ReConnecReq struct {
	Uid                  int64    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReConnecReq) Reset()         { *m = ReConnecReq{} }
func (m *ReConnecReq) String() string { return proto.CompactTextString(m) }
func (*ReConnecReq) ProtoMessage()    {}
func (*ReConnecReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_c4fa9163c26a35ec, []int{1}
}

func (m *ReConnecReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReConnecReq.Unmarshal(m, b)
}
func (m *ReConnecReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReConnecReq.Marshal(b, m, deterministic)
}
func (m *ReConnecReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReConnecReq.Merge(m, src)
}
func (m *ReConnecReq) XXX_Size() int {
	return xxx_messageInfo_ReConnecReq.Size(m)
}
func (m *ReConnecReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ReConnecReq.DiscardUnknown(m)
}

var xxx_messageInfo_ReConnecReq proto.InternalMessageInfo

func (m *ReConnecReq) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

type EndGameReq struct {
	RoomId               int64    `protobuf:"varint,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EndGameReq) Reset()         { *m = EndGameReq{} }
func (m *EndGameReq) String() string { return proto.CompactTextString(m) }
func (*EndGameReq) ProtoMessage()    {}
func (*EndGameReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_c4fa9163c26a35ec, []int{2}
}

func (m *EndGameReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EndGameReq.Unmarshal(m, b)
}
func (m *EndGameReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EndGameReq.Marshal(b, m, deterministic)
}
func (m *EndGameReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EndGameReq.Merge(m, src)
}
func (m *EndGameReq) XXX_Size() int {
	return xxx_messageInfo_EndGameReq.Size(m)
}
func (m *EndGameReq) XXX_DiscardUnknown() {
	xxx_messageInfo_EndGameReq.DiscardUnknown(m)
}

var xxx_messageInfo_EndGameReq proto.InternalMessageInfo

func (m *EndGameReq) GetRoomId() int64 {
	if m != nil {
		return m.RoomId
	}
	return 0
}

type SettleReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SettleReq) Reset()         { *m = SettleReq{} }
func (m *SettleReq) String() string { return proto.CompactTextString(m) }
func (*SettleReq) ProtoMessage()    {}
func (*SettleReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_c4fa9163c26a35ec, []int{3}
}

func (m *SettleReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SettleReq.Unmarshal(m, b)
}
func (m *SettleReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SettleReq.Marshal(b, m, deterministic)
}
func (m *SettleReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SettleReq.Merge(m, src)
}
func (m *SettleReq) XXX_Size() int {
	return xxx_messageInfo_SettleReq.Size(m)
}
func (m *SettleReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SettleReq.DiscardUnknown(m)
}

var xxx_messageInfo_SettleReq proto.InternalMessageInfo

type SettleCoinReq struct {
	GameId               int32    `protobuf:"varint,1,opt,name=gameId,proto3" json:"gameId,omitempty"`
	RoomId               int64    `protobuf:"varint,2,opt,name=roomId,proto3" json:"roomId,omitempty"`
	RoundNo              string   `protobuf:"bytes,3,opt,name=roundNo,proto3" json:"roundNo,omitempty"`
	Coin                 int64    `protobuf:"varint,4,opt,name=coin,proto3" json:"coin,omitempty"`
	GameType             int32    `protobuf:"varint,5,opt,name=gameType,proto3" json:"gameType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SettleCoinReq) Reset()         { *m = SettleCoinReq{} }
func (m *SettleCoinReq) String() string { return proto.CompactTextString(m) }
func (*SettleCoinReq) ProtoMessage()    {}
func (*SettleCoinReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_c4fa9163c26a35ec, []int{4}
}

func (m *SettleCoinReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SettleCoinReq.Unmarshal(m, b)
}
func (m *SettleCoinReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SettleCoinReq.Marshal(b, m, deterministic)
}
func (m *SettleCoinReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SettleCoinReq.Merge(m, src)
}
func (m *SettleCoinReq) XXX_Size() int {
	return xxx_messageInfo_SettleCoinReq.Size(m)
}
func (m *SettleCoinReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SettleCoinReq.DiscardUnknown(m)
}

var xxx_messageInfo_SettleCoinReq proto.InternalMessageInfo

func (m *SettleCoinReq) GetGameId() int32 {
	if m != nil {
		return m.GameId
	}
	return 0
}

func (m *SettleCoinReq) GetRoomId() int64 {
	if m != nil {
		return m.RoomId
	}
	return 0
}

func (m *SettleCoinReq) GetRoundNo() string {
	if m != nil {
		return m.RoundNo
	}
	return ""
}

func (m *SettleCoinReq) GetCoin() int64 {
	if m != nil {
		return m.Coin
	}
	return 0
}

func (m *SettleCoinReq) GetGameType() int32 {
	if m != nil {
		return m.GameType
	}
	return 0
}

func init() {
	proto.RegisterType((*EnterGameRep)(nil), "protocol.EnterGameRep")
	proto.RegisterType((*ReConnecReq)(nil), "protocol.ReConnecReq")
	proto.RegisterType((*EndGameReq)(nil), "protocol.EndGameReq")
	proto.RegisterType((*SettleReq)(nil), "protocol.SettleReq")
	proto.RegisterType((*SettleCoinReq)(nil), "protocol.SettleCoinReq")
}

func init() { proto.RegisterFile("server-center.proto", fileDescriptor_c4fa9163c26a35ec) }

var fileDescriptor_c4fa9163c26a35ec = []byte{
	// 488 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x93, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xc7, 0x31, 0x69, 0xd2, 0x78, 0x52, 0x24, 0xba, 0x29, 0xc5, 0xf2, 0x85, 0xc8, 0xe2, 0xd0,
	0x4b, 0x23, 0x11, 0x22, 0x40, 0xdc, 0x20, 0xaa, 0xa2, 0x8a, 0x88, 0x83, 0x53, 0x4e, 0x9c, 0xcc,
	0x7a, 0x94, 0x58, 0xb5, 0x77, 0x9c, 0xcd, 0xba, 0x52, 0x1f, 0x81, 0xd7, 0xe5, 0x8e, 0x84, 0x76,
	0xd7, 0x5f, 0x6d, 0x92, 0x1e, 0x38, 0xc5, 0xf3, 0x9b, 0xf9, 0xcf, 0xcc, 0xce, 0x64, 0x60, 0xb8,
	0x45, 0x79, 0x87, 0xf2, 0x92, 0xa3, 0x50, 0x28, 0xc7, 0xb9, 0x24, 0x45, 0xac, 0x6f, 0x7e, 0x38,
	0xa5, 0xfe, 0x19, 0x4f, 0x13, 0x14, 0xea, 0x32, 0xe2, 0x9c, 0x0a, 0xa1, 0xac, 0xdf, 0x3f, 0x2d,
	0x29, 0x5f, 0x47, 0x8f, 0xd1, 0x2a, 0xca, 0xb0, 0x44, 0x27, 0x6b, 0x8c, 0xe2, 0x2a, 0xa7, 0x3f,
	0x28, 0x44, 0xa2, 0xee, 0xad, 0x11, 0xac, 0xe1, 0xe4, 0x4a, 0xd7, 0x9b, 0x47, 0x19, 0x86, 0x98,
	0xb3, 0x97, 0xd0, 0x29, 0x92, 0xd8, 0x73, 0x46, 0xce, 0x45, 0x27, 0xd4, 0x9f, 0xec, 0x1c, 0x7a,
	0x92, 0x28, 0xbb, 0x8e, 0xbd, 0xe7, 0x06, 0x96, 0x96, 0xe6, 0xba, 0xc4, 0x75, 0xec, 0x75, 0x2c,
	0xb7, 0x56, 0xcd, 0x73, 0xef, 0x68, 0xe4, 0x5c, 0xb8, 0x25, 0xcf, 0x83, 0x37, 0x30, 0x08, 0x71,
	0x46, 0x42, 0x20, 0x0f, 0x71, 0xb3, 0x5b, 0x28, 0x78, 0x0b, 0x70, 0x25, 0x62, 0xdb, 0xc8, 0xa6,
	0x55, 0xd6, 0x69, 0x97, 0x0d, 0x06, 0xe0, 0x2e, 0x51, 0xa9, 0x54, 0x07, 0x05, 0xbf, 0x1d, 0x78,
	0x61, 0xad, 0x19, 0x25, 0xa2, 0x94, 0x95, 0x5d, 0x69, 0x59, 0xb7, 0xdd, 0xd5, 0xde, 0x57, 0x78,
	0x70, 0x2c, 0xa9, 0x10, 0xf1, 0x77, 0x32, 0xcf, 0x70, 0xc3, 0xca, 0x64, 0x0c, 0x8e, 0x38, 0x25,
	0xc2, 0xbc, 0xa2, 0x13, 0x9a, 0x6f, 0xe6, 0x43, 0x5f, 0xe7, 0xbb, 0xb9, 0xcf, 0xd1, 0xeb, 0x9a,
	0xfc, 0xb5, 0x3d, 0xf9, 0xdb, 0x01, 0x36, 0x33, 0xbb, 0x9b, 0xce, 0x23, 0x85, 0x4b, 0x94, 0x77,
	0x09, 0x47, 0xf6, 0x0e, 0xba, 0x0b, 0x5a, 0x25, 0x82, 0xb1, 0x71, 0xb5, 0xcb, 0xb1, 0x01, 0x21,
	0x6e, 0xfc, 0xc7, 0xec, 0x0b, 0xbf, 0x0d, 0x9e, 0xb1, 0x29, 0xf4, 0x16, 0xb4, 0xa2, 0x42, 0xb1,
	0xe1, 0x03, 0x3f, 0x15, 0x4a, 0x8b, 0x76, 0xa0, 0x55, 0x7d, 0x04, 0xb7, 0x9a, 0xaf, 0x62, 0xaf,
	0x9a, 0x98, 0xd6, 0xd0, 0xfd, 0xd3, 0x06, 0xcf, 0xa2, 0x34, 0xb5, 0xc2, 0x0f, 0xd0, 0xff, 0x96,
	0xf0, 0xdb, 0x1f, 0x5b, 0x94, 0x6d, 0x5d, 0xc5, 0x0e, 0xea, 0x7e, 0xc2, 0x70, 0x8e, 0xca, 0xec,
	0x8b, 0x28, 0xd3, 0x33, 0x58, 0x24, 0x5b, 0xc5, 0x46, 0x4d, 0xec, 0x1e, 0xb7, 0xce, 0xf6, 0x74,
	0x84, 0x4d, 0xfe, 0x19, 0x60, 0x89, 0x22, 0xbe, 0x21, 0xd3, 0xd6, 0xeb, 0x46, 0xd1, 0xd0, 0x83,
	0x8d, 0xd5, 0x5a, 0x9d, 0x76, 0x57, 0xab, 0xe9, 0x41, 0xed, 0x27, 0x70, 0xbf, 0x52, 0x24, 0x63,
	0x1e, 0x6d, 0x15, 0x3b, 0x6f, 0x22, 0x6a, 0x78, 0x48, 0x39, 0xf9, 0xe3, 0xb4, 0xf6, 0x9f, 0xd5,
	0xfb, 0xff, 0xdf, 0xe9, 0x4e, 0xe1, 0xb8, 0xbc, 0x06, 0x76, 0xd6, 0xf8, 0x9b, 0x03, 0xd9, 0xaf,
	0x9a, 0x40, 0xcf, 0xde, 0x43, 0xfb, 0xaf, 0x53, 0xdf, 0xcb, 0x13, 0xe3, 0xaa, 0x6e, 0xe8, 0xe1,
	0xb8, 0x5a, 0x97, 0xb5, 0x57, 0xfb, 0xab, 0x67, 0xd8, 0xfb, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff,
	0x7d, 0x5e, 0x2e, 0x7e, 0xbd, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Center4GateServiceClient is the client API for Center4GateService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type Center4GateServiceClient interface {
	//------------------- account 账号 ----------------------
	Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginAck, error)
	Logout(ctx context.Context, in *LogoutReq, opts ...grpc.CallOption) (*LogoutAck, error)
	//重连
	ReConnect(ctx context.Context, in *ReConnecReq, opts ...grpc.CallOption) (*CallAck, error)
	//踢下线
	KickUser(ctx context.Context, in *KickUserReq, opts ...grpc.CallOption) (*CallAck, error)
	//------------------ Game 游戏 ------------------------
	GetGameRoomTypeList(ctx context.Context, in *GetGameRoomTypeListReq, opts ...grpc.CallOption) (*GetGameRoomTypeListAck, error)
	//------------------- Chat 聊天系统 -------------------------
	SendToUser(ctx context.Context, in *SendToUserReq, opts ...grpc.CallOption) (*CallAck, error)
	SendToRoom(ctx context.Context, in *SendToRoomReq, opts ...grpc.CallOption) (*CallAck, error)
	Boardcast(ctx context.Context, in *BoardcastReq, opts ...grpc.CallOption) (*CallAck, error)
}

type center4GateServiceClient struct {
	cc *grpc.ClientConn
}

func NewCenter4GateServiceClient(cc *grpc.ClientConn) Center4GateServiceClient {
	return &center4GateServiceClient{cc}
}

func (c *center4GateServiceClient) Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginAck, error) {
	out := new(LoginAck)
	err := c.cc.Invoke(ctx, "/protocol.Center4GateService/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *center4GateServiceClient) Logout(ctx context.Context, in *LogoutReq, opts ...grpc.CallOption) (*LogoutAck, error) {
	out := new(LogoutAck)
	err := c.cc.Invoke(ctx, "/protocol.Center4GateService/Logout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *center4GateServiceClient) ReConnect(ctx context.Context, in *ReConnecReq, opts ...grpc.CallOption) (*CallAck, error) {
	out := new(CallAck)
	err := c.cc.Invoke(ctx, "/protocol.Center4GateService/ReConnect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *center4GateServiceClient) KickUser(ctx context.Context, in *KickUserReq, opts ...grpc.CallOption) (*CallAck, error) {
	out := new(CallAck)
	err := c.cc.Invoke(ctx, "/protocol.Center4GateService/KickUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *center4GateServiceClient) GetGameRoomTypeList(ctx context.Context, in *GetGameRoomTypeListReq, opts ...grpc.CallOption) (*GetGameRoomTypeListAck, error) {
	out := new(GetGameRoomTypeListAck)
	err := c.cc.Invoke(ctx, "/protocol.Center4GateService/GetGameRoomTypeList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *center4GateServiceClient) SendToUser(ctx context.Context, in *SendToUserReq, opts ...grpc.CallOption) (*CallAck, error) {
	out := new(CallAck)
	err := c.cc.Invoke(ctx, "/protocol.Center4GateService/SendToUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *center4GateServiceClient) SendToRoom(ctx context.Context, in *SendToRoomReq, opts ...grpc.CallOption) (*CallAck, error) {
	out := new(CallAck)
	err := c.cc.Invoke(ctx, "/protocol.Center4GateService/SendToRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *center4GateServiceClient) Boardcast(ctx context.Context, in *BoardcastReq, opts ...grpc.CallOption) (*CallAck, error) {
	out := new(CallAck)
	err := c.cc.Invoke(ctx, "/protocol.Center4GateService/Boardcast", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Center4GateServiceServer is the server API for Center4GateService service.
type Center4GateServiceServer interface {
	//------------------- account 账号 ----------------------
	Login(context.Context, *LoginReq) (*LoginAck, error)
	Logout(context.Context, *LogoutReq) (*LogoutAck, error)
	//重连
	ReConnect(context.Context, *ReConnecReq) (*CallAck, error)
	//踢下线
	KickUser(context.Context, *KickUserReq) (*CallAck, error)
	//------------------ Game 游戏 ------------------------
	GetGameRoomTypeList(context.Context, *GetGameRoomTypeListReq) (*GetGameRoomTypeListAck, error)
	//------------------- Chat 聊天系统 -------------------------
	SendToUser(context.Context, *SendToUserReq) (*CallAck, error)
	SendToRoom(context.Context, *SendToRoomReq) (*CallAck, error)
	Boardcast(context.Context, *BoardcastReq) (*CallAck, error)
}

// UnimplementedCenter4GateServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCenter4GateServiceServer struct {
}

func (*UnimplementedCenter4GateServiceServer) Login(ctx context.Context, req *LoginReq) (*LoginAck, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (*UnimplementedCenter4GateServiceServer) Logout(ctx context.Context, req *LogoutReq) (*LogoutAck, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Logout not implemented")
}
func (*UnimplementedCenter4GateServiceServer) ReConnect(ctx context.Context, req *ReConnecReq) (*CallAck, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReConnect not implemented")
}
func (*UnimplementedCenter4GateServiceServer) KickUser(ctx context.Context, req *KickUserReq) (*CallAck, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KickUser not implemented")
}
func (*UnimplementedCenter4GateServiceServer) GetGameRoomTypeList(ctx context.Context, req *GetGameRoomTypeListReq) (*GetGameRoomTypeListAck, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGameRoomTypeList not implemented")
}
func (*UnimplementedCenter4GateServiceServer) SendToUser(ctx context.Context, req *SendToUserReq) (*CallAck, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendToUser not implemented")
}
func (*UnimplementedCenter4GateServiceServer) SendToRoom(ctx context.Context, req *SendToRoomReq) (*CallAck, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendToRoom not implemented")
}
func (*UnimplementedCenter4GateServiceServer) Boardcast(ctx context.Context, req *BoardcastReq) (*CallAck, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Boardcast not implemented")
}

func RegisterCenter4GateServiceServer(s *grpc.Server, srv Center4GateServiceServer) {
	s.RegisterService(&_Center4GateService_serviceDesc, srv)
}

func _Center4GateService_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Center4GateServiceServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.Center4GateService/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Center4GateServiceServer).Login(ctx, req.(*LoginReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Center4GateService_Logout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogoutReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Center4GateServiceServer).Logout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.Center4GateService/Logout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Center4GateServiceServer).Logout(ctx, req.(*LogoutReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Center4GateService_ReConnect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReConnecReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Center4GateServiceServer).ReConnect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.Center4GateService/ReConnect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Center4GateServiceServer).ReConnect(ctx, req.(*ReConnecReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Center4GateService_KickUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KickUserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Center4GateServiceServer).KickUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.Center4GateService/KickUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Center4GateServiceServer).KickUser(ctx, req.(*KickUserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Center4GateService_GetGameRoomTypeList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGameRoomTypeListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Center4GateServiceServer).GetGameRoomTypeList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.Center4GateService/GetGameRoomTypeList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Center4GateServiceServer).GetGameRoomTypeList(ctx, req.(*GetGameRoomTypeListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Center4GateService_SendToUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendToUserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Center4GateServiceServer).SendToUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.Center4GateService/SendToUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Center4GateServiceServer).SendToUser(ctx, req.(*SendToUserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Center4GateService_SendToRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendToRoomReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Center4GateServiceServer).SendToRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.Center4GateService/SendToRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Center4GateServiceServer).SendToRoom(ctx, req.(*SendToRoomReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Center4GateService_Boardcast_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BoardcastReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Center4GateServiceServer).Boardcast(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.Center4GateService/Boardcast",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Center4GateServiceServer).Boardcast(ctx, req.(*BoardcastReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Center4GateService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protocol.Center4GateService",
	HandlerType: (*Center4GateServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _Center4GateService_Login_Handler,
		},
		{
			MethodName: "Logout",
			Handler:    _Center4GateService_Logout_Handler,
		},
		{
			MethodName: "ReConnect",
			Handler:    _Center4GateService_ReConnect_Handler,
		},
		{
			MethodName: "KickUser",
			Handler:    _Center4GateService_KickUser_Handler,
		},
		{
			MethodName: "GetGameRoomTypeList",
			Handler:    _Center4GateService_GetGameRoomTypeList_Handler,
		},
		{
			MethodName: "SendToUser",
			Handler:    _Center4GateService_SendToUser_Handler,
		},
		{
			MethodName: "SendToRoom",
			Handler:    _Center4GateService_SendToRoom_Handler,
		},
		{
			MethodName: "Boardcast",
			Handler:    _Center4GateService_Boardcast_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "server-center.proto",
}

// Center4GameServiceClient is the client API for Center4GameService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type Center4GameServiceClient interface {
	KickUser(ctx context.Context, in *KickUserReq, opts ...grpc.CallOption) (*CallAck, error)
	//游戏结束
	EndGame(ctx context.Context, in *EndGameReq, opts ...grpc.CallOption) (*CallAck, error)
	//总结算 （录像，任务 。。）
	Settle(ctx context.Context, in *SettleReq, opts ...grpc.CallOption) (*CallAck, error)
	//金币变化 （输/赢）
	SettleCoin(ctx context.Context, in *SettleCoinReq, opts ...grpc.CallOption) (*CallAck, error)
}

type center4GameServiceClient struct {
	cc *grpc.ClientConn
}

func NewCenter4GameServiceClient(cc *grpc.ClientConn) Center4GameServiceClient {
	return &center4GameServiceClient{cc}
}

func (c *center4GameServiceClient) KickUser(ctx context.Context, in *KickUserReq, opts ...grpc.CallOption) (*CallAck, error) {
	out := new(CallAck)
	err := c.cc.Invoke(ctx, "/protocol.Center4GameService/KickUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *center4GameServiceClient) EndGame(ctx context.Context, in *EndGameReq, opts ...grpc.CallOption) (*CallAck, error) {
	out := new(CallAck)
	err := c.cc.Invoke(ctx, "/protocol.Center4GameService/EndGame", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *center4GameServiceClient) Settle(ctx context.Context, in *SettleReq, opts ...grpc.CallOption) (*CallAck, error) {
	out := new(CallAck)
	err := c.cc.Invoke(ctx, "/protocol.Center4GameService/Settle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *center4GameServiceClient) SettleCoin(ctx context.Context, in *SettleCoinReq, opts ...grpc.CallOption) (*CallAck, error) {
	out := new(CallAck)
	err := c.cc.Invoke(ctx, "/protocol.Center4GameService/SettleCoin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Center4GameServiceServer is the server API for Center4GameService service.
type Center4GameServiceServer interface {
	KickUser(context.Context, *KickUserReq) (*CallAck, error)
	//游戏结束
	EndGame(context.Context, *EndGameReq) (*CallAck, error)
	//总结算 （录像，任务 。。）
	Settle(context.Context, *SettleReq) (*CallAck, error)
	//金币变化 （输/赢）
	SettleCoin(context.Context, *SettleCoinReq) (*CallAck, error)
}

// UnimplementedCenter4GameServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCenter4GameServiceServer struct {
}

func (*UnimplementedCenter4GameServiceServer) KickUser(ctx context.Context, req *KickUserReq) (*CallAck, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KickUser not implemented")
}
func (*UnimplementedCenter4GameServiceServer) EndGame(ctx context.Context, req *EndGameReq) (*CallAck, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EndGame not implemented")
}
func (*UnimplementedCenter4GameServiceServer) Settle(ctx context.Context, req *SettleReq) (*CallAck, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Settle not implemented")
}
func (*UnimplementedCenter4GameServiceServer) SettleCoin(ctx context.Context, req *SettleCoinReq) (*CallAck, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SettleCoin not implemented")
}

func RegisterCenter4GameServiceServer(s *grpc.Server, srv Center4GameServiceServer) {
	s.RegisterService(&_Center4GameService_serviceDesc, srv)
}

func _Center4GameService_KickUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KickUserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Center4GameServiceServer).KickUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.Center4GameService/KickUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Center4GameServiceServer).KickUser(ctx, req.(*KickUserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Center4GameService_EndGame_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EndGameReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Center4GameServiceServer).EndGame(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.Center4GameService/EndGame",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Center4GameServiceServer).EndGame(ctx, req.(*EndGameReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Center4GameService_Settle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SettleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Center4GameServiceServer).Settle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.Center4GameService/Settle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Center4GameServiceServer).Settle(ctx, req.(*SettleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Center4GameService_SettleCoin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SettleCoinReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Center4GameServiceServer).SettleCoin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.Center4GameService/SettleCoin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Center4GameServiceServer).SettleCoin(ctx, req.(*SettleCoinReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Center4GameService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protocol.Center4GameService",
	HandlerType: (*Center4GameServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "KickUser",
			Handler:    _Center4GameService_KickUser_Handler,
		},
		{
			MethodName: "EndGame",
			Handler:    _Center4GameService_EndGame_Handler,
		},
		{
			MethodName: "Settle",
			Handler:    _Center4GameService_Settle_Handler,
		},
		{
			MethodName: "SettleCoin",
			Handler:    _Center4GameService_SettleCoin_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "server-center.proto",
}
