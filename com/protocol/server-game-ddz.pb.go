// Code generated by protoc-gen-go. DO NOT EDIT.
// source: server-game-ddz.proto

package protocol

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//加入房间 如果是小队队长 则队员也会加入
type JoinRoomReq struct {
	RoomId               int64    `protobuf:"varint,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	Uid                  int64    `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	GameType             string   `protobuf:"bytes,3,opt,name=gameType,proto3" json:"gameType,omitempty"`
	TeamId               int64    `protobuf:"varint,4,opt,name=teamId,proto3" json:"teamId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JoinRoomReq) Reset()         { *m = JoinRoomReq{} }
func (m *JoinRoomReq) String() string { return proto.CompactTextString(m) }
func (*JoinRoomReq) ProtoMessage()    {}
func (*JoinRoomReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a18bd94f2f55b00, []int{0}
}

func (m *JoinRoomReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinRoomReq.Unmarshal(m, b)
}
func (m *JoinRoomReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinRoomReq.Marshal(b, m, deterministic)
}
func (m *JoinRoomReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinRoomReq.Merge(m, src)
}
func (m *JoinRoomReq) XXX_Size() int {
	return xxx_messageInfo_JoinRoomReq.Size(m)
}
func (m *JoinRoomReq) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinRoomReq.DiscardUnknown(m)
}

var xxx_messageInfo_JoinRoomReq proto.InternalMessageInfo

func (m *JoinRoomReq) GetRoomId() int64 {
	if m != nil {
		return m.RoomId
	}
	return 0
}

func (m *JoinRoomReq) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *JoinRoomReq) GetGameType() string {
	if m != nil {
		return m.GameType
	}
	return ""
}

func (m *JoinRoomReq) GetTeamId() int64 {
	if m != nil {
		return m.TeamId
	}
	return 0
}

type JoinTeamReq struct {
	TeamId               int64    `protobuf:"varint,1,opt,name=teamId,proto3" json:"teamId,omitempty"`
	Uid                  int64    `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	InviteUid            int64    `protobuf:"varint,3,opt,name=inviteUid,proto3" json:"inviteUid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JoinTeamReq) Reset()         { *m = JoinTeamReq{} }
func (m *JoinTeamReq) String() string { return proto.CompactTextString(m) }
func (*JoinTeamReq) ProtoMessage()    {}
func (*JoinTeamReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a18bd94f2f55b00, []int{1}
}

func (m *JoinTeamReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinTeamReq.Unmarshal(m, b)
}
func (m *JoinTeamReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinTeamReq.Marshal(b, m, deterministic)
}
func (m *JoinTeamReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinTeamReq.Merge(m, src)
}
func (m *JoinTeamReq) XXX_Size() int {
	return xxx_messageInfo_JoinTeamReq.Size(m)
}
func (m *JoinTeamReq) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinTeamReq.DiscardUnknown(m)
}

var xxx_messageInfo_JoinTeamReq proto.InternalMessageInfo

func (m *JoinTeamReq) GetTeamId() int64 {
	if m != nil {
		return m.TeamId
	}
	return 0
}

func (m *JoinTeamReq) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *JoinTeamReq) GetInviteUid() int64 {
	if m != nil {
		return m.InviteUid
	}
	return 0
}

//发牌
type DealPokerNotify struct {
	Header               *NotiHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Poker                []int32     `protobuf:"varint,2,rep,packed,name=poker,proto3" json:"poker,omitempty"`
	Banker               int32       `protobuf:"varint,3,opt,name=banker,proto3" json:"banker,omitempty"`
	Any                  int32       `protobuf:"varint,4,opt,name=any,proto3" json:"any,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *DealPokerNotify) Reset()         { *m = DealPokerNotify{} }
func (m *DealPokerNotify) String() string { return proto.CompactTextString(m) }
func (*DealPokerNotify) ProtoMessage()    {}
func (*DealPokerNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a18bd94f2f55b00, []int{2}
}

func (m *DealPokerNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DealPokerNotify.Unmarshal(m, b)
}
func (m *DealPokerNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DealPokerNotify.Marshal(b, m, deterministic)
}
func (m *DealPokerNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DealPokerNotify.Merge(m, src)
}
func (m *DealPokerNotify) XXX_Size() int {
	return xxx_messageInfo_DealPokerNotify.Size(m)
}
func (m *DealPokerNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_DealPokerNotify.DiscardUnknown(m)
}

var xxx_messageInfo_DealPokerNotify proto.InternalMessageInfo

func (m *DealPokerNotify) GetHeader() *NotiHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *DealPokerNotify) GetPoker() []int32 {
	if m != nil {
		return m.Poker
	}
	return nil
}

func (m *DealPokerNotify) GetBanker() int32 {
	if m != nil {
		return m.Banker
	}
	return 0
}

func (m *DealPokerNotify) GetAny() int32 {
	if m != nil {
		return m.Any
	}
	return 0
}

//明牌
type CallVisibleReq struct {
	Header               *ReqHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CallVisibleReq) Reset()         { *m = CallVisibleReq{} }
func (m *CallVisibleReq) String() string { return proto.CompactTextString(m) }
func (*CallVisibleReq) ProtoMessage()    {}
func (*CallVisibleReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a18bd94f2f55b00, []int{3}
}

func (m *CallVisibleReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CallVisibleReq.Unmarshal(m, b)
}
func (m *CallVisibleReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CallVisibleReq.Marshal(b, m, deterministic)
}
func (m *CallVisibleReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CallVisibleReq.Merge(m, src)
}
func (m *CallVisibleReq) XXX_Size() int {
	return xxx_messageInfo_CallVisibleReq.Size(m)
}
func (m *CallVisibleReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CallVisibleReq.DiscardUnknown(m)
}

var xxx_messageInfo_CallVisibleReq proto.InternalMessageInfo

func (m *CallVisibleReq) GetHeader() *ReqHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type CallVisibleAck struct {
	Header               *AckHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CallVisibleAck) Reset()         { *m = CallVisibleAck{} }
func (m *CallVisibleAck) String() string { return proto.CompactTextString(m) }
func (*CallVisibleAck) ProtoMessage()    {}
func (*CallVisibleAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a18bd94f2f55b00, []int{4}
}

func (m *CallVisibleAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CallVisibleAck.Unmarshal(m, b)
}
func (m *CallVisibleAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CallVisibleAck.Marshal(b, m, deterministic)
}
func (m *CallVisibleAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CallVisibleAck.Merge(m, src)
}
func (m *CallVisibleAck) XXX_Size() int {
	return xxx_messageInfo_CallVisibleAck.Size(m)
}
func (m *CallVisibleAck) XXX_DiscardUnknown() {
	xxx_messageInfo_CallVisibleAck.DiscardUnknown(m)
}

var xxx_messageInfo_CallVisibleAck proto.InternalMessageInfo

func (m *CallVisibleAck) GetHeader() *AckHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type CallVisibleNotify struct {
	Header               *NotiHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Poker                []int32     `protobuf:"varint,2,rep,packed,name=poker,proto3" json:"poker,omitempty"`
	Seat                 int32       `protobuf:"varint,3,opt,name=seat,proto3" json:"seat,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CallVisibleNotify) Reset()         { *m = CallVisibleNotify{} }
func (m *CallVisibleNotify) String() string { return proto.CompactTextString(m) }
func (*CallVisibleNotify) ProtoMessage()    {}
func (*CallVisibleNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a18bd94f2f55b00, []int{5}
}

func (m *CallVisibleNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CallVisibleNotify.Unmarshal(m, b)
}
func (m *CallVisibleNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CallVisibleNotify.Marshal(b, m, deterministic)
}
func (m *CallVisibleNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CallVisibleNotify.Merge(m, src)
}
func (m *CallVisibleNotify) XXX_Size() int {
	return xxx_messageInfo_CallVisibleNotify.Size(m)
}
func (m *CallVisibleNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_CallVisibleNotify.DiscardUnknown(m)
}

var xxx_messageInfo_CallVisibleNotify proto.InternalMessageInfo

func (m *CallVisibleNotify) GetHeader() *NotiHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CallVisibleNotify) GetPoker() []int32 {
	if m != nil {
		return m.Poker
	}
	return nil
}

func (m *CallVisibleNotify) GetSeat() int32 {
	if m != nil {
		return m.Seat
	}
	return 0
}

//提示叫地主、抢地主
type CallBankerNotify struct {
	Header               *NotiHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CallBankerNotify) Reset()         { *m = CallBankerNotify{} }
func (m *CallBankerNotify) String() string { return proto.CompactTextString(m) }
func (*CallBankerNotify) ProtoMessage()    {}
func (*CallBankerNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a18bd94f2f55b00, []int{6}
}

func (m *CallBankerNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CallBankerNotify.Unmarshal(m, b)
}
func (m *CallBankerNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CallBankerNotify.Marshal(b, m, deterministic)
}
func (m *CallBankerNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CallBankerNotify.Merge(m, src)
}
func (m *CallBankerNotify) XXX_Size() int {
	return xxx_messageInfo_CallBankerNotify.Size(m)
}
func (m *CallBankerNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_CallBankerNotify.DiscardUnknown(m)
}

var xxx_messageInfo_CallBankerNotify proto.InternalMessageInfo

func (m *CallBankerNotify) GetHeader() *NotiHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

//开始叫地主
type CallBankerReq struct {
	Header               *ReqHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Call                 bool       `protobuf:"varint,2,opt,name=call,proto3" json:"call,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CallBankerReq) Reset()         { *m = CallBankerReq{} }
func (m *CallBankerReq) String() string { return proto.CompactTextString(m) }
func (*CallBankerReq) ProtoMessage()    {}
func (*CallBankerReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a18bd94f2f55b00, []int{7}
}

func (m *CallBankerReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CallBankerReq.Unmarshal(m, b)
}
func (m *CallBankerReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CallBankerReq.Marshal(b, m, deterministic)
}
func (m *CallBankerReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CallBankerReq.Merge(m, src)
}
func (m *CallBankerReq) XXX_Size() int {
	return xxx_messageInfo_CallBankerReq.Size(m)
}
func (m *CallBankerReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CallBankerReq.DiscardUnknown(m)
}

var xxx_messageInfo_CallBankerReq proto.InternalMessageInfo

func (m *CallBankerReq) GetHeader() *ReqHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CallBankerReq) GetCall() bool {
	if m != nil {
		return m.Call
	}
	return false
}

type CallBankerAck struct {
	Header               *AckHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CallBankerAck) Reset()         { *m = CallBankerAck{} }
func (m *CallBankerAck) String() string { return proto.CompactTextString(m) }
func (*CallBankerAck) ProtoMessage()    {}
func (*CallBankerAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a18bd94f2f55b00, []int{8}
}

func (m *CallBankerAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CallBankerAck.Unmarshal(m, b)
}
func (m *CallBankerAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CallBankerAck.Marshal(b, m, deterministic)
}
func (m *CallBankerAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CallBankerAck.Merge(m, src)
}
func (m *CallBankerAck) XXX_Size() int {
	return xxx_messageInfo_CallBankerAck.Size(m)
}
func (m *CallBankerAck) XXX_DiscardUnknown() {
	xxx_messageInfo_CallBankerAck.DiscardUnknown(m)
}

var xxx_messageInfo_CallBankerAck proto.InternalMessageInfo

func (m *CallBankerAck) GetHeader() *AckHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

//加倍提示
type CallDuobleNotify struct {
	Header               *NotiHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CallDuobleNotify) Reset()         { *m = CallDuobleNotify{} }
func (m *CallDuobleNotify) String() string { return proto.CompactTextString(m) }
func (*CallDuobleNotify) ProtoMessage()    {}
func (*CallDuobleNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a18bd94f2f55b00, []int{9}
}

func (m *CallDuobleNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CallDuobleNotify.Unmarshal(m, b)
}
func (m *CallDuobleNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CallDuobleNotify.Marshal(b, m, deterministic)
}
func (m *CallDuobleNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CallDuobleNotify.Merge(m, src)
}
func (m *CallDuobleNotify) XXX_Size() int {
	return xxx_messageInfo_CallDuobleNotify.Size(m)
}
func (m *CallDuobleNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_CallDuobleNotify.DiscardUnknown(m)
}

var xxx_messageInfo_CallDuobleNotify proto.InternalMessageInfo

func (m *CallDuobleNotify) GetHeader() *NotiHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

//是否加倍
type CallDuobleReq struct {
	Header               *ReqHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Points               int32      `protobuf:"varint,2,opt,name=points,proto3" json:"points,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CallDuobleReq) Reset()         { *m = CallDuobleReq{} }
func (m *CallDuobleReq) String() string { return proto.CompactTextString(m) }
func (*CallDuobleReq) ProtoMessage()    {}
func (*CallDuobleReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a18bd94f2f55b00, []int{10}
}

func (m *CallDuobleReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CallDuobleReq.Unmarshal(m, b)
}
func (m *CallDuobleReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CallDuobleReq.Marshal(b, m, deterministic)
}
func (m *CallDuobleReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CallDuobleReq.Merge(m, src)
}
func (m *CallDuobleReq) XXX_Size() int {
	return xxx_messageInfo_CallDuobleReq.Size(m)
}
func (m *CallDuobleReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CallDuobleReq.DiscardUnknown(m)
}

var xxx_messageInfo_CallDuobleReq proto.InternalMessageInfo

func (m *CallDuobleReq) GetHeader() *ReqHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CallDuobleReq) GetPoints() int32 {
	if m != nil {
		return m.Points
	}
	return 0
}

type CallDuobleAck struct {
	Header               *AckHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CallDuobleAck) Reset()         { *m = CallDuobleAck{} }
func (m *CallDuobleAck) String() string { return proto.CompactTextString(m) }
func (*CallDuobleAck) ProtoMessage()    {}
func (*CallDuobleAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a18bd94f2f55b00, []int{11}
}

func (m *CallDuobleAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CallDuobleAck.Unmarshal(m, b)
}
func (m *CallDuobleAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CallDuobleAck.Marshal(b, m, deterministic)
}
func (m *CallDuobleAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CallDuobleAck.Merge(m, src)
}
func (m *CallDuobleAck) XXX_Size() int {
	return xxx_messageInfo_CallDuobleAck.Size(m)
}
func (m *CallDuobleAck) XXX_DiscardUnknown() {
	xxx_messageInfo_CallDuobleAck.DiscardUnknown(m)
}

var xxx_messageInfo_CallDuobleAck proto.InternalMessageInfo

func (m *CallDuobleAck) GetHeader() *AckHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

//（地）癞子 提示
type RandomAnyNotify struct {
	Header               *NotiHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Any                  int32       `protobuf:"varint,2,opt,name=any,proto3" json:"any,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *RandomAnyNotify) Reset()         { *m = RandomAnyNotify{} }
func (m *RandomAnyNotify) String() string { return proto.CompactTextString(m) }
func (*RandomAnyNotify) ProtoMessage()    {}
func (*RandomAnyNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a18bd94f2f55b00, []int{12}
}

func (m *RandomAnyNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RandomAnyNotify.Unmarshal(m, b)
}
func (m *RandomAnyNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RandomAnyNotify.Marshal(b, m, deterministic)
}
func (m *RandomAnyNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RandomAnyNotify.Merge(m, src)
}
func (m *RandomAnyNotify) XXX_Size() int {
	return xxx_messageInfo_RandomAnyNotify.Size(m)
}
func (m *RandomAnyNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_RandomAnyNotify.DiscardUnknown(m)
}

var xxx_messageInfo_RandomAnyNotify proto.InternalMessageInfo

func (m *RandomAnyNotify) GetHeader() *NotiHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RandomAnyNotify) GetAny() int32 {
	if m != nil {
		return m.Any
	}
	return 0
}

//出牌提示
type DiscardPokerNotify struct {
	Header               *NotiHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Pre                  []int32     `protobuf:"varint,2,rep,packed,name=pre,proto3" json:"pre,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *DiscardPokerNotify) Reset()         { *m = DiscardPokerNotify{} }
func (m *DiscardPokerNotify) String() string { return proto.CompactTextString(m) }
func (*DiscardPokerNotify) ProtoMessage()    {}
func (*DiscardPokerNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a18bd94f2f55b00, []int{13}
}

func (m *DiscardPokerNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiscardPokerNotify.Unmarshal(m, b)
}
func (m *DiscardPokerNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiscardPokerNotify.Marshal(b, m, deterministic)
}
func (m *DiscardPokerNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscardPokerNotify.Merge(m, src)
}
func (m *DiscardPokerNotify) XXX_Size() int {
	return xxx_messageInfo_DiscardPokerNotify.Size(m)
}
func (m *DiscardPokerNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscardPokerNotify.DiscardUnknown(m)
}

var xxx_messageInfo_DiscardPokerNotify proto.InternalMessageInfo

func (m *DiscardPokerNotify) GetHeader() *NotiHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *DiscardPokerNotify) GetPre() []int32 {
	if m != nil {
		return m.Pre
	}
	return nil
}

//出牌
type DiscardPokerReq struct {
	Header               *ReqHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Poker                []int32    `protobuf:"varint,2,rep,packed,name=poker,proto3" json:"poker,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *DiscardPokerReq) Reset()         { *m = DiscardPokerReq{} }
func (m *DiscardPokerReq) String() string { return proto.CompactTextString(m) }
func (*DiscardPokerReq) ProtoMessage()    {}
func (*DiscardPokerReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a18bd94f2f55b00, []int{14}
}

func (m *DiscardPokerReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiscardPokerReq.Unmarshal(m, b)
}
func (m *DiscardPokerReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiscardPokerReq.Marshal(b, m, deterministic)
}
func (m *DiscardPokerReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscardPokerReq.Merge(m, src)
}
func (m *DiscardPokerReq) XXX_Size() int {
	return xxx_messageInfo_DiscardPokerReq.Size(m)
}
func (m *DiscardPokerReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscardPokerReq.DiscardUnknown(m)
}

var xxx_messageInfo_DiscardPokerReq proto.InternalMessageInfo

func (m *DiscardPokerReq) GetHeader() *ReqHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *DiscardPokerReq) GetPoker() []int32 {
	if m != nil {
		return m.Poker
	}
	return nil
}

type DiscardPokerAck struct {
	Header               *AckHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *DiscardPokerAck) Reset()         { *m = DiscardPokerAck{} }
func (m *DiscardPokerAck) String() string { return proto.CompactTextString(m) }
func (*DiscardPokerAck) ProtoMessage()    {}
func (*DiscardPokerAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a18bd94f2f55b00, []int{15}
}

func (m *DiscardPokerAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiscardPokerAck.Unmarshal(m, b)
}
func (m *DiscardPokerAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiscardPokerAck.Marshal(b, m, deterministic)
}
func (m *DiscardPokerAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscardPokerAck.Merge(m, src)
}
func (m *DiscardPokerAck) XXX_Size() int {
	return xxx_messageInfo_DiscardPokerAck.Size(m)
}
func (m *DiscardPokerAck) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscardPokerAck.DiscardUnknown(m)
}

var xxx_messageInfo_DiscardPokerAck proto.InternalMessageInfo

func (m *DiscardPokerAck) GetHeader() *AckHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

//离线、托管、超时 自动出牌
type DiscardNotify struct {
	Header               *NotiHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Seat                 int32       `protobuf:"varint,2,opt,name=seat,proto3" json:"seat,omitempty"`
	Poker                []int32     `protobuf:"varint,3,rep,packed,name=poker,proto3" json:"poker,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *DiscardNotify) Reset()         { *m = DiscardNotify{} }
func (m *DiscardNotify) String() string { return proto.CompactTextString(m) }
func (*DiscardNotify) ProtoMessage()    {}
func (*DiscardNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a18bd94f2f55b00, []int{16}
}

func (m *DiscardNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiscardNotify.Unmarshal(m, b)
}
func (m *DiscardNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiscardNotify.Marshal(b, m, deterministic)
}
func (m *DiscardNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscardNotify.Merge(m, src)
}
func (m *DiscardNotify) XXX_Size() int {
	return xxx_messageInfo_DiscardNotify.Size(m)
}
func (m *DiscardNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscardNotify.DiscardUnknown(m)
}

var xxx_messageInfo_DiscardNotify proto.InternalMessageInfo

func (m *DiscardNotify) GetHeader() *NotiHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *DiscardNotify) GetSeat() int32 {
	if m != nil {
		return m.Seat
	}
	return 0
}

func (m *DiscardNotify) GetPoker() []int32 {
	if m != nil {
		return m.Poker
	}
	return nil
}

//倍数更新 （炸弹）
type UpdatePointsNotify struct {
	Header               *NotiHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Points               int64       `protobuf:"varint,2,opt,name=points,proto3" json:"points,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UpdatePointsNotify) Reset()         { *m = UpdatePointsNotify{} }
func (m *UpdatePointsNotify) String() string { return proto.CompactTextString(m) }
func (*UpdatePointsNotify) ProtoMessage()    {}
func (*UpdatePointsNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a18bd94f2f55b00, []int{17}
}

func (m *UpdatePointsNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatePointsNotify.Unmarshal(m, b)
}
func (m *UpdatePointsNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatePointsNotify.Marshal(b, m, deterministic)
}
func (m *UpdatePointsNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePointsNotify.Merge(m, src)
}
func (m *UpdatePointsNotify) XXX_Size() int {
	return xxx_messageInfo_UpdatePointsNotify.Size(m)
}
func (m *UpdatePointsNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePointsNotify.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePointsNotify proto.InternalMessageInfo

func (m *UpdatePointsNotify) GetHeader() *NotiHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *UpdatePointsNotify) GetPoints() int64 {
	if m != nil {
		return m.Points
	}
	return 0
}

//打完收工
type SettleNotify struct {
	Header               *NotiHeader                `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Points               int64                      `protobuf:"varint,2,opt,name=points,proto3" json:"points,omitempty"`
	Title                string                     `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Extra                string                     `protobuf:"bytes,4,opt,name=extra,proto3" json:"extra,omitempty"`
	Items                []*SettleNotify_SettleItem `protobuf:"bytes,5,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *SettleNotify) Reset()         { *m = SettleNotify{} }
func (m *SettleNotify) String() string { return proto.CompactTextString(m) }
func (*SettleNotify) ProtoMessage()    {}
func (*SettleNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a18bd94f2f55b00, []int{18}
}

func (m *SettleNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SettleNotify.Unmarshal(m, b)
}
func (m *SettleNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SettleNotify.Marshal(b, m, deterministic)
}
func (m *SettleNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SettleNotify.Merge(m, src)
}
func (m *SettleNotify) XXX_Size() int {
	return xxx_messageInfo_SettleNotify.Size(m)
}
func (m *SettleNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_SettleNotify.DiscardUnknown(m)
}

var xxx_messageInfo_SettleNotify proto.InternalMessageInfo

func (m *SettleNotify) GetHeader() *NotiHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *SettleNotify) GetPoints() int64 {
	if m != nil {
		return m.Points
	}
	return 0
}

func (m *SettleNotify) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *SettleNotify) GetExtra() string {
	if m != nil {
		return m.Extra
	}
	return ""
}

func (m *SettleNotify) GetItems() []*SettleNotify_SettleItem {
	if m != nil {
		return m.Items
	}
	return nil
}

type SettleNotify_SettleItem struct {
	Seat                 int32    `protobuf:"varint,1,opt,name=seat,proto3" json:"seat,omitempty"`
	Coin                 int64    `protobuf:"varint,2,opt,name=coin,proto3" json:"coin,omitempty"`
	LeftCoin             int64    `protobuf:"varint,3,opt,name=leftCoin,proto3" json:"leftCoin,omitempty"`
	Points               int64    `protobuf:"varint,4,opt,name=points,proto3" json:"points,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SettleNotify_SettleItem) Reset()         { *m = SettleNotify_SettleItem{} }
func (m *SettleNotify_SettleItem) String() string { return proto.CompactTextString(m) }
func (*SettleNotify_SettleItem) ProtoMessage()    {}
func (*SettleNotify_SettleItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a18bd94f2f55b00, []int{18, 0}
}

func (m *SettleNotify_SettleItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SettleNotify_SettleItem.Unmarshal(m, b)
}
func (m *SettleNotify_SettleItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SettleNotify_SettleItem.Marshal(b, m, deterministic)
}
func (m *SettleNotify_SettleItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SettleNotify_SettleItem.Merge(m, src)
}
func (m *SettleNotify_SettleItem) XXX_Size() int {
	return xxx_messageInfo_SettleNotify_SettleItem.Size(m)
}
func (m *SettleNotify_SettleItem) XXX_DiscardUnknown() {
	xxx_messageInfo_SettleNotify_SettleItem.DiscardUnknown(m)
}

var xxx_messageInfo_SettleNotify_SettleItem proto.InternalMessageInfo

func (m *SettleNotify_SettleItem) GetSeat() int32 {
	if m != nil {
		return m.Seat
	}
	return 0
}

func (m *SettleNotify_SettleItem) GetCoin() int64 {
	if m != nil {
		return m.Coin
	}
	return 0
}

func (m *SettleNotify_SettleItem) GetLeftCoin() int64 {
	if m != nil {
		return m.LeftCoin
	}
	return 0
}

func (m *SettleNotify_SettleItem) GetPoints() int64 {
	if m != nil {
		return m.Points
	}
	return 0
}

func init() {
	proto.RegisterType((*JoinRoomReq)(nil), "protocol.JoinRoomReq")
	proto.RegisterType((*JoinTeamReq)(nil), "protocol.JoinTeamReq")
	proto.RegisterType((*DealPokerNotify)(nil), "protocol.DealPokerNotify")
	proto.RegisterType((*CallVisibleReq)(nil), "protocol.CallVisibleReq")
	proto.RegisterType((*CallVisibleAck)(nil), "protocol.CallVisibleAck")
	proto.RegisterType((*CallVisibleNotify)(nil), "protocol.CallVisibleNotify")
	proto.RegisterType((*CallBankerNotify)(nil), "protocol.CallBankerNotify")
	proto.RegisterType((*CallBankerReq)(nil), "protocol.CallBankerReq")
	proto.RegisterType((*CallBankerAck)(nil), "protocol.CallBankerAck")
	proto.RegisterType((*CallDuobleNotify)(nil), "protocol.CallDuobleNotify")
	proto.RegisterType((*CallDuobleReq)(nil), "protocol.CallDuobleReq")
	proto.RegisterType((*CallDuobleAck)(nil), "protocol.CallDuobleAck")
	proto.RegisterType((*RandomAnyNotify)(nil), "protocol.RandomAnyNotify")
	proto.RegisterType((*DiscardPokerNotify)(nil), "protocol.DiscardPokerNotify")
	proto.RegisterType((*DiscardPokerReq)(nil), "protocol.DiscardPokerReq")
	proto.RegisterType((*DiscardPokerAck)(nil), "protocol.DiscardPokerAck")
	proto.RegisterType((*DiscardNotify)(nil), "protocol.DiscardNotify")
	proto.RegisterType((*UpdatePointsNotify)(nil), "protocol.UpdatePointsNotify")
	proto.RegisterType((*SettleNotify)(nil), "protocol.SettleNotify")
	proto.RegisterType((*SettleNotify_SettleItem)(nil), "protocol.SettleNotify.SettleItem")
}

func init() { proto.RegisterFile("server-game-ddz.proto", fileDescriptor_0a18bd94f2f55b00) }

var fileDescriptor_0a18bd94f2f55b00 = []byte{
	// 677 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0x26, 0x71, 0x1d, 0xa5, 0x93, 0xfe, 0x2e, 0x6d, 0x09, 0x16, 0x87, 0xe0, 0x53, 0x24, 0x68,
	0x0f, 0x45, 0x82, 0x0b, 0xa0, 0x86, 0x46, 0x40, 0x39, 0xa0, 0xb2, 0x4d, 0x39, 0x70, 0xdb, 0xda,
	0xd3, 0x76, 0x15, 0xdb, 0x9b, 0x3a, 0xdb, 0x8a, 0xf4, 0xc2, 0x33, 0xf0, 0x0c, 0xbc, 0x28, 0xda,
	0x1f, 0x67, 0x9d, 0x28, 0x45, 0x8a, 0xc5, 0xc9, 0x3b, 0xb3, 0x33, 0xdf, 0xcc, 0x37, 0x9e, 0x9d,
	0x81, 0xdd, 0x31, 0xe6, 0x77, 0x98, 0xef, 0x5f, 0xb1, 0x14, 0xf7, 0xe3, 0xf8, 0xfe, 0x60, 0x94,
	0x0b, 0x29, 0x48, 0x53, 0x7f, 0x22, 0x91, 0x04, 0x6b, 0xd7, 0xc8, 0x62, 0xcc, 0x8d, 0x3e, 0x1c,
	0x42, 0xeb, 0x8b, 0xe0, 0x19, 0x15, 0x22, 0xa5, 0x78, 0x43, 0xf6, 0xa0, 0x91, 0x0b, 0x91, 0x9e,
	0xc4, 0xed, 0x5a, 0xa7, 0xd6, 0xf5, 0xa8, 0x95, 0xc8, 0x16, 0x78, 0xb7, 0x3c, 0x6e, 0xd7, 0xb5,
	0x52, 0x1d, 0x49, 0x00, 0x4d, 0x15, 0x62, 0x30, 0x19, 0x61, 0xdb, 0xeb, 0xd4, 0xba, 0xab, 0x74,
	0x2a, 0x2b, 0x14, 0x89, 0x4c, 0xa1, 0xac, 0x18, 0x14, 0x23, 0x85, 0xe7, 0x26, 0xd8, 0x00, 0x59,
	0x11, 0xcc, 0x9a, 0xd5, 0xca, 0x66, 0x0b, 0x82, 0x3d, 0x83, 0x55, 0x9e, 0xdd, 0x71, 0x89, 0xe7,
	0x3c, 0xd6, 0xd1, 0x3c, 0xea, 0x14, 0xe1, 0x2f, 0xd8, 0xec, 0x23, 0x4b, 0x4e, 0xc5, 0x10, 0xf3,
	0xaf, 0x42, 0xf2, 0xcb, 0x09, 0x79, 0x09, 0x0d, 0x43, 0x53, 0x43, 0xb7, 0x0e, 0x77, 0x0e, 0x0a,
	0xfe, 0x07, 0xca, 0xe2, 0xb3, 0xbe, 0xa3, 0xd6, 0x86, 0xec, 0x80, 0x3f, 0x52, 0xce, 0xed, 0x7a,
	0xc7, 0xeb, 0xfa, 0xd4, 0x08, 0x2a, 0xbd, 0x0b, 0x96, 0x29, 0xb5, 0x8a, 0xe8, 0x53, 0x2b, 0xa9,
	0xf4, 0x58, 0x36, 0xd1, 0xd4, 0x7c, 0xaa, 0x8e, 0xe1, 0x3b, 0xd8, 0x38, 0x66, 0x49, 0xf2, 0x9d,
	0x8f, 0xf9, 0x45, 0x82, 0x8a, 0xda, 0x8b, 0xb9, 0xf8, 0x8f, 0x5d, 0x7c, 0x8a, 0x37, 0xb3, 0xe1,
	0xe7, 0xdc, 0x7b, 0xd1, 0xf0, 0x5f, 0xee, 0xbd, 0x68, 0x38, 0xe7, 0x3e, 0x84, 0xed, 0x92, 0xfb,
	0x7f, 0x2c, 0x00, 0x81, 0x95, 0x31, 0x32, 0x69, 0xe9, 0xeb, 0x73, 0x78, 0x04, 0x5b, 0x2a, 0xd8,
	0x07, 0x5d, 0x8a, 0x2a, 0xb1, 0xc2, 0x53, 0x58, 0x77, 0x08, 0xcb, 0xd6, 0x4a, 0xe5, 0x14, 0xb1,
	0x24, 0xd1, 0xcd, 0xd1, 0xa4, 0xfa, 0x1c, 0xbe, 0x2d, 0x23, 0x2e, 0x5d, 0x3e, 0xcb, 0xa8, 0x7f,
	0x2b, 0x2a, 0x56, 0x2f, 0x1c, 0x98, 0xf8, 0x06, 0x61, 0x69, 0x46, 0x7b, 0xd0, 0x18, 0x09, 0x9e,
	0xc9, 0xb1, 0xe6, 0xe4, 0x53, 0x2b, 0x15, 0xac, 0x0c, 0xea, 0xd2, 0xac, 0xbe, 0xc1, 0x26, 0x65,
	0x59, 0x2c, 0xd2, 0x5e, 0x36, 0xa9, 0xd4, 0x12, 0xb6, 0xcb, 0xeb, 0xae, 0xcb, 0x07, 0x40, 0xfa,
	0x7c, 0x1c, 0xb1, 0x3c, 0xae, 0xfe, 0xd2, 0xb6, 0xc0, 0x1b, 0xe5, 0x68, 0xdb, 0x4c, 0x1d, 0xc3,
	0x01, 0x6c, 0x96, 0x51, 0x97, 0x2e, 0xdf, 0xc2, 0xd6, 0x0d, 0xdf, 0xcf, 0xa2, 0x2e, 0x5d, 0xbe,
	0x2b, 0x58, 0xb7, 0xfe, 0x95, 0x68, 0x16, 0x2f, 0xa7, 0xee, 0x5e, 0x8e, 0x4b, 0xd4, 0x2b, 0x27,
	0xfa, 0x03, 0xc8, 0xf9, 0x28, 0x66, 0x12, 0x4f, 0xf5, 0x5f, 0xaf, 0x14, 0x6d, 0xb6, 0x83, 0xbc,
	0x69, 0x07, 0xfd, 0xa9, 0xc3, 0xda, 0x19, 0x4a, 0x59, 0x71, 0x28, 0x3c, 0x00, 0xab, 0x88, 0x48,
	0x2e, 0x93, 0x62, 0xec, 0x1b, 0x41, 0x69, 0xf1, 0xa7, 0xcc, 0x99, 0x9e, 0x8b, 0xab, 0xd4, 0x08,
	0xe4, 0x0d, 0xf8, 0x5c, 0x62, 0x3a, 0x6e, 0xfb, 0x1d, 0xaf, 0xdb, 0x3a, 0x7c, 0xee, 0x02, 0x96,
	0x13, 0xb3, 0xc2, 0x89, 0xc4, 0x94, 0x1a, 0xfb, 0xe0, 0x1a, 0xc0, 0x29, 0xa7, 0xf5, 0xac, 0x95,
	0xea, 0xa9, 0x26, 0x81, 0xe0, 0x99, 0x4d, 0x4e, 0x9f, 0xd5, 0x52, 0x4a, 0xf0, 0x52, 0x1e, 0x2b,
	0xbd, 0x59, 0x13, 0x53, 0xb9, 0x44, 0x67, 0xa5, 0x4c, 0xe7, 0xf0, 0xb7, 0x07, 0x1b, 0x9f, 0x58,
	0x8a, 0xfd, 0xf8, 0xfe, 0x0c, 0xf3, 0x3b, 0x1e, 0x21, 0x79, 0x0d, 0xcd, 0x62, 0x4f, 0x91, 0x5d,
	0x97, 0x72, 0x69, 0x77, 0x05, 0xdb, 0x4e, 0xad, 0x5e, 0x69, 0x2f, 0x1a, 0x86, 0x8f, 0x0a, 0x3f,
	0xb5, 0x4c, 0xe7, 0xfd, 0xec, 0x82, 0x5d, 0xec, 0x77, 0x0c, 0xad, 0xd2, 0x04, 0x27, 0xed, 0x59,
	0x1b, 0xb7, 0x56, 0x82, 0xc5, 0x37, 0x06, 0xe4, 0x08, 0xc0, 0x4d, 0x41, 0xf2, 0x64, 0xd6, 0x72,
	0x3a, 0x6d, 0x83, 0x85, 0x17, 0x33, 0x08, 0x66, 0xe2, 0xcc, 0x23, 0x4c, 0xa7, 0x5b, 0xb0, 0xf0,
	0xc2, 0x20, 0x7c, 0x84, 0xb5, 0xf2, 0xb3, 0x23, 0x4f, 0x9d, 0xe9, 0xdc, 0x23, 0x0f, 0x1e, 0xb8,
	0xd2, 0x38, 0x17, 0x0d, 0x7d, 0xf7, 0xea, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x50, 0x06, 0xea,
	0x1a, 0xcd, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GameDdzServiceClient is the client API for GameDdzService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GameDdzServiceClient interface {
	JoinTeam(ctx context.Context, in *JoinTeamReq, opts ...grpc.CallOption) (*CallAck, error)
	//房间满员时开始游戏
	JoinRoom(ctx context.Context, in *JoinRoomReq, opts ...grpc.CallOption) (*CallAck, error)
	//明牌
	CallVisible(ctx context.Context, in *CallVisibleReq, opts ...grpc.CallOption) (*CallVisibleAck, error)
	//叫地主
	CallBanker(ctx context.Context, in *CallBankerReq, opts ...grpc.CallOption) (*CallBankerAck, error)
	//加倍
	CallDuoble(ctx context.Context, in *CallDuobleReq, opts ...grpc.CallOption) (*CallDuobleAck, error)
	//出牌
	DiscardPoker(ctx context.Context, in *DiscardPokerReq, opts ...grpc.CallOption) (*DiscardPokerAck, error)
}

type gameDdzServiceClient struct {
	cc *grpc.ClientConn
}

func NewGameDdzServiceClient(cc *grpc.ClientConn) GameDdzServiceClient {
	return &gameDdzServiceClient{cc}
}

func (c *gameDdzServiceClient) JoinTeam(ctx context.Context, in *JoinTeamReq, opts ...grpc.CallOption) (*CallAck, error) {
	out := new(CallAck)
	err := c.cc.Invoke(ctx, "/protocol.GameDdzService/JoinTeam", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameDdzServiceClient) JoinRoom(ctx context.Context, in *JoinRoomReq, opts ...grpc.CallOption) (*CallAck, error) {
	out := new(CallAck)
	err := c.cc.Invoke(ctx, "/protocol.GameDdzService/JoinRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameDdzServiceClient) CallVisible(ctx context.Context, in *CallVisibleReq, opts ...grpc.CallOption) (*CallVisibleAck, error) {
	out := new(CallVisibleAck)
	err := c.cc.Invoke(ctx, "/protocol.GameDdzService/CallVisible", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameDdzServiceClient) CallBanker(ctx context.Context, in *CallBankerReq, opts ...grpc.CallOption) (*CallBankerAck, error) {
	out := new(CallBankerAck)
	err := c.cc.Invoke(ctx, "/protocol.GameDdzService/CallBanker", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameDdzServiceClient) CallDuoble(ctx context.Context, in *CallDuobleReq, opts ...grpc.CallOption) (*CallDuobleAck, error) {
	out := new(CallDuobleAck)
	err := c.cc.Invoke(ctx, "/protocol.GameDdzService/CallDuoble", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameDdzServiceClient) DiscardPoker(ctx context.Context, in *DiscardPokerReq, opts ...grpc.CallOption) (*DiscardPokerAck, error) {
	out := new(DiscardPokerAck)
	err := c.cc.Invoke(ctx, "/protocol.GameDdzService/DiscardPoker", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GameDdzServiceServer is the server API for GameDdzService service.
type GameDdzServiceServer interface {
	JoinTeam(context.Context, *JoinTeamReq) (*CallAck, error)
	//房间满员时开始游戏
	JoinRoom(context.Context, *JoinRoomReq) (*CallAck, error)
	//明牌
	CallVisible(context.Context, *CallVisibleReq) (*CallVisibleAck, error)
	//叫地主
	CallBanker(context.Context, *CallBankerReq) (*CallBankerAck, error)
	//加倍
	CallDuoble(context.Context, *CallDuobleReq) (*CallDuobleAck, error)
	//出牌
	DiscardPoker(context.Context, *DiscardPokerReq) (*DiscardPokerAck, error)
}

// UnimplementedGameDdzServiceServer can be embedded to have forward compatible implementations.
type UnimplementedGameDdzServiceServer struct {
}

func (*UnimplementedGameDdzServiceServer) JoinTeam(ctx context.Context, req *JoinTeamReq) (*CallAck, error) {
	return nil, status.Errorf(codes.Unimplemented, "method JoinTeam not implemented")
}
func (*UnimplementedGameDdzServiceServer) JoinRoom(ctx context.Context, req *JoinRoomReq) (*CallAck, error) {
	return nil, status.Errorf(codes.Unimplemented, "method JoinRoom not implemented")
}
func (*UnimplementedGameDdzServiceServer) CallVisible(ctx context.Context, req *CallVisibleReq) (*CallVisibleAck, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CallVisible not implemented")
}
func (*UnimplementedGameDdzServiceServer) CallBanker(ctx context.Context, req *CallBankerReq) (*CallBankerAck, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CallBanker not implemented")
}
func (*UnimplementedGameDdzServiceServer) CallDuoble(ctx context.Context, req *CallDuobleReq) (*CallDuobleAck, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CallDuoble not implemented")
}
func (*UnimplementedGameDdzServiceServer) DiscardPoker(ctx context.Context, req *DiscardPokerReq) (*DiscardPokerAck, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DiscardPoker not implemented")
}

func RegisterGameDdzServiceServer(s *grpc.Server, srv GameDdzServiceServer) {
	s.RegisterService(&_GameDdzService_serviceDesc, srv)
}

func _GameDdzService_JoinTeam_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JoinTeamReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameDdzServiceServer).JoinTeam(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.GameDdzService/JoinTeam",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameDdzServiceServer).JoinTeam(ctx, req.(*JoinTeamReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GameDdzService_JoinRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JoinRoomReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameDdzServiceServer).JoinRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.GameDdzService/JoinRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameDdzServiceServer).JoinRoom(ctx, req.(*JoinRoomReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GameDdzService_CallVisible_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CallVisibleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameDdzServiceServer).CallVisible(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.GameDdzService/CallVisible",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameDdzServiceServer).CallVisible(ctx, req.(*CallVisibleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GameDdzService_CallBanker_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CallBankerReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameDdzServiceServer).CallBanker(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.GameDdzService/CallBanker",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameDdzServiceServer).CallBanker(ctx, req.(*CallBankerReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GameDdzService_CallDuoble_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CallDuobleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameDdzServiceServer).CallDuoble(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.GameDdzService/CallDuoble",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameDdzServiceServer).CallDuoble(ctx, req.(*CallDuobleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GameDdzService_DiscardPoker_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DiscardPokerReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameDdzServiceServer).DiscardPoker(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.GameDdzService/DiscardPoker",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameDdzServiceServer).DiscardPoker(ctx, req.(*DiscardPokerReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _GameDdzService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protocol.GameDdzService",
	HandlerType: (*GameDdzServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "JoinTeam",
			Handler:    _GameDdzService_JoinTeam_Handler,
		},
		{
			MethodName: "JoinRoom",
			Handler:    _GameDdzService_JoinRoom_Handler,
		},
		{
			MethodName: "CallVisible",
			Handler:    _GameDdzService_CallVisible_Handler,
		},
		{
			MethodName: "CallBanker",
			Handler:    _GameDdzService_CallBanker_Handler,
		},
		{
			MethodName: "CallDuoble",
			Handler:    _GameDdzService_CallDuoble_Handler,
		},
		{
			MethodName: "DiscardPoker",
			Handler:    _GameDdzService_DiscardPoker_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "server-game-ddz.proto",
}
